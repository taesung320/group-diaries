<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.diary.DiaryMapper">
    <select id="selectDiaries" resultType="com.example.demo.diary.DiaryModel">
        SELECT id, written_date, writer_id, diary_title, details
        FROM diaries
    </select>

    <insert id="insertDiary" parameterType="com.example.demo.diary.DiaryModel">
        INSERT INTO diaries (id, written_date, writer_id,diary_title, details)
        VALUES (#{id}, #{written_date}, #{writer_id}, #{diary_title}, #{details});
    </insert>

    <update id="updateDiary" parameterType="com.example.demo.diary.DiaryModel">
        UPDATE diaries
        SET written_date = #{written_date},
            diary_title = #{diary_title},
            writer_id = #{writer_id},
            details = #{details}
        WHERE id = #{id};
    </update>

    <delete id="deleteDiary">
        DELETE
        FROM diaries
        WHERE id = #{diaryId};
    </delete>

    <select id="requestAllTeamDiaries" parameterType="com.example.demo.request.DiaryRequest">
        SELECT d.written_date, d.diary_title, u.user_name, u.color, u.initial
        FROM diaries d JOIN users u
            ON d.writer_id = u.id
        WHERE u.id = #{UserModel.id};
    </select>

    <select id="requestDiaryDetails" resultType="com.example.demo.diary.DiaryModel">
        SELECT d.written_date, d.diary_title, d.details, td.team_id, t.team_name
        FROM diaries d JOIN team_diary td ON d.id = td.diary_id
        JOIN teams t ON td.team_id = t.id
        WHERE id = #{diaryId};
    </select>
</mapper>